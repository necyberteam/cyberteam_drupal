diff --git a/src/Controller/DomainSiteSettingsController.php b/src/Controller/DomainSiteSettingsController.php
index b5a3d51..f84e00c 100644
--- a/src/Controller/DomainSiteSettingsController.php
+++ b/src/Controller/DomainSiteSettingsController.php
@@ -3,10 +3,10 @@
 namespace Drupal\domain_site_settings\Controller;
 
 use Drupal\Core\Controller\ControllerBase;
+use Drupal\Core\Entity\EntityTypeManager;
 use Drupal\Core\Link;
 use Drupal\Core\Url;
 use Symfony\Component\DependencyInjection\ContainerInterface;
-use Drupal\domain\DomainLoader;
 
 /**
  * Class DomainSiteSettingsController.
@@ -16,22 +16,19 @@ use Drupal\domain\DomainLoader;
 class DomainSiteSettingsController extends ControllerBase {
 
   /**
-   * Drupal\domain\DomainLoader definition.
+   * The entity type manager.
    *
-   * @var \Drupal\domain\DomainLoader
+   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
    */
-  protected $domainLoader;
+  protected $entityTypeManager;
 
   /**
    * Construct function.
    *
-   * @param \Drupal\domain\DomainLoader $domain_loader
-   *   Load the domain records.
+   * @param \Drupal\Core\Entity\EntityTypeManager $entity_type_manager
    */
-  public function __construct(
-  DomainLoader $domain_loader
-  ) {
-    $this->domainLoader = $domain_loader;
+  public function __construct(EntityTypeManager $entity_type_manager) {
+    $this->entityTypeManager = $entity_type_manager;
   }
 
   /**
@@ -45,7 +42,7 @@ class DomainSiteSettingsController extends ControllerBase {
    */
   public static function create(ContainerInterface $container) {
     return new static(
-        $container->get('domain.loader')
+      $container->get('entity_type.manager')
     );
   }
 
@@ -56,7 +53,7 @@ class DomainSiteSettingsController extends ControllerBase {
    *   Domain list.
    */
   public function domainList() {
-    $domains = $this->domainLoader->loadMultipleSorted();
+    $domains = $this->entityTypeManager->getStorage('domain')->loadMultiple();
     $rows = [];
     /** @var \Drupal\domain\DomainInterface $domain */
     foreach ($domains as $domain) {
