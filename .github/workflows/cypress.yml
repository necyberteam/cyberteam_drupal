name: (M) Cypress Tests
on:
  pull_request:
  workflow_dispatch:
    inputs:
      database:
        description: 'Recent database dump to use (leave blank to use artifact)'
      sites:
        description: 'Specify which sites to test or leave the default to run all tests.'
        default: 'asp, ccmnet, connectci, crct, campuschampions, coco'
        required: true
      prnum:
        description: 'Pull request number â€” adds a comment to a pull request (nomally empty)'

permissions:
  contents: write
  actions: read
  pull-requests: write

jobs:
  asp:
    name: Run cypress tests in 'accessmatch' directory
    uses: necyberteam/reusable_actions/.github/workflows/cypress.yml@v3.2
    if: contains(github.event.inputs.sites, 'asp') || github.event_name == 'pull_request'
    secrets:
      slack_token: ${{ secrets.SLACK_TOKEN }}
      site: "accessmatch"
      database: ${{ github.event.inputs.database }}
      prnum: ${{ github.event.inputs.prnum }}
      gh_token: ${{ secrets.GH_TOKEN_REPO }}
      LANDO_ENV: ${{ secrets.LANDO_ENV }}
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      REPO: "${{ github.server_url }}/${{ github.repository }}"

  ccmnet:
    name: Run cypress tests in 'ccmnet' directory
    uses: necyberteam/reusable_actions/.github/workflows/cypress.yml@v3.2
    if: contains(github.event.inputs.sites, 'ccmnet') || github.event_name == 'pull_request'
    secrets:
      slack_token: ${{ secrets.SLACK_TOKEN }}
      site: "ccmnet"
      database: ${{ github.event.inputs.database }}
      prnum: ${{ github.event.inputs.prnum }}
      gh_token: ${{ secrets.GH_TOKEN_REPO }}
      LANDO_ENV: ${{ secrets.LANDO_ENV }}
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      REPO: "${{ github.server_url }}/${{ github.repository }}"

  connectci:
    name: Run cypress tests in 'connectci' directory
    uses: necyberteam/reusable_actions/.github/workflows/cypress.yml@v3.2
    if: contains(github.event.inputs.sites, 'connectci') || github.event_name == 'pull_request'
    secrets:
      slack_token: ${{ secrets.SLACK_TOKEN }}
      site: "connectci"
      database: ${{ github.event.inputs.database }}
      prnum: ${{ github.event.inputs.prnum }}
      gh_token: ${{ secrets.GH_TOKEN_REPO }}
      LANDO_ENV: ${{ secrets.LANDO_ENV }}
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      REPO: "${{ github.server_url }}/${{ github.repository }}"

  crct:
    name: Run cypress tests in 'crct' directory
    uses: necyberteam/reusable_actions/.github/workflows/cypress.yml@v3.2
    if: contains(github.event.inputs.sites, 'crct') || github.event_name == 'pull_request'
    secrets:
      slack_token: ${{ secrets.SLACK_TOKEN }}
      site: "crct"
      database: ${{ github.event.inputs.database }}
      prnum: ${{ github.event.inputs.prnum }}
      gh_token: ${{ secrets.GH_TOKEN_REPO }}
      LANDO_ENV: ${{ secrets.LANDO_ENV }}
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      REPO: "${{ github.server_url }}/${{ github.repository }}"

  campuschampions:
    name: Run cypress tests in 'campuschampions' directory
    uses: necyberteam/reusable_actions/.github/workflows/cypress.yml@v3.2
    if: contains(github.event.inputs.sites, 'campuschampions') || github.event_name == 'pull_request'
    secrets:
      slack_token: ${{ secrets.SLACK_TOKEN }}
      site: "campuschampions"
      database: ${{ github.event.inputs.database }}
      prnum: ${{ github.event.inputs.prnum }}
      gh_token: ${{ secrets.GH_TOKEN_REPO }}
      LANDO_ENV: ${{ secrets.LANDO_ENV }}
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      REPO: "${{ github.server_url }}/${{ github.repository }}"
  coco:
    name: Run cypress tests in 'coco' directory
    uses: necyberteam/reusable_actions/.github/workflows/cypress.yml@v3.2
    if: contains(github.event.inputs.sites, 'coco') || github.event_name == 'pull_request'
    secrets:
      slack_token: ${{ secrets.SLACK_TOKEN }}
      site: "coco"
      database: ${{ github.event.inputs.database }}
      prnum: ${{ github.event.inputs.prnum }}
      gh_token: ${{ secrets.GH_TOKEN_REPO }}
      LANDO_ENV: ${{ secrets.LANDO_ENV }}
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      REPO: "${{ github.server_url }}/${{ github.repository }}"
  # success:
  #   name: Actions to run on success
  #   needs: [asp]
  #   if: ${{ success() || ( always() && ! cancelled() && ! failure() ) }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Comment on pull request
  #       if: "${{ env.prnum  != '' }}"
  #       run: |
  #         gh pr comment $prnum -R $REPO --body "ðŸ¤– -=-=-=- Cypress Test was Successful -=-=-=- ðŸ¤–"
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         prnum: ${{ github.event.inputs.prnum }}
  #         REPO: "${{ github.server_url }}/${{ github.repository }}"
  #     - name: Slack Notification Success
  #       uses: rtCamp/action-slack-notify@v2
  #       env:
  #         SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
  #         SLACK_MESSAGE: 'ðŸ¤– -=-=-=- Cypress Test Succeeded -=-=-=- ðŸ¤–'
  #         SLACK_TITLE: "Cypress tests passed"
  #         SLACK_CHANNEL: cypress-git-notifications

  fail:
    name: Actions to run on fail
    needs: [asp, ccmnet, connectci, crct, campuschampions]
    if:  ${{ failure() }}
    runs-on: ubuntu-latest
    steps:
      - name: Comment on pull request
        if: "${{ env.prnum  != '' }}"
        run: |
          gh pr comment $prnum -R $REPO --body "ðŸ¤– -=-=-=- Cypress Test has failed ðŸ˜© -=-=-=- ðŸ¤–"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          prnum: ${{ github.event.inputs.prnum }}
          REPO: "${{ github.server_url }}/${{ github.repository }}"
      - name: Slack Notification Success
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: 'ðŸ¤– -=-=-=- Cypress Test Failed -=-=-=- ðŸ¤–'
          SLACK_TITLE: "Cypress tests failed"
          SLACK_CHANNEL: cypress-git-notifications
