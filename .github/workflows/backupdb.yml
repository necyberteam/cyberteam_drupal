name: (A) Database to artifact
on:
  workflow_dispatch:
  schedule:
    - cron:  '16 11 * * *'
permissions:
  contents: write
  actions: read
  pull-requests: write
jobs:
  build:
    name: Grab backup and fix backup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1

      - name: Store day of week
        run: echo "week_day=$(date +%a)" >> $GITHUB_ENV

      - uses: ./.github/actions/dingorunner
        env:
          runner: cr
          terminus_api: ${{ secrets.TERMINUS_API }}
          SSH_PRIVATE_KEY: ${{ secrets.PANTHEON_DEPLOY_KEY}}
          site_name: ${{ secrets.TERMINUS_SITE_NAME }}
          env: live

      - uses: ./.github/actions/dingorunner
        env:
          runner: bkup
          terminus_api: ${{ secrets.TERMINUS_API }}
          SSH_PRIVATE_KEY: ${{ secrets.PANTHEON_DEPLOY_KEY}}
          site_name: ${{ secrets.TERMINUS_SITE_NAME }}
          env: live

      - id: DDEV
        uses: ./.github/actions/ddev-base
        with:
          site: "accessmatch"
          database: ''
          github_token: ${{ secrets.GH_TOKEN_REPO }}
          amp_uid: ${{ secrets.AMP_UID }}

      - name: Sanitize backup
        run: |
          ddev drush sql-sanitize --allowlist-fields=field_constant_contact_id --sanitize-password=y -y
          ddev drush cim -y
          ddev drush cr
          ddev drush updb -y
          ddev drush user-create authenticated_test_user --mail="authenticated@amptesting.com" --password="6%l7iF}6(4tI"
          ddev drush user-create administrator_test_user --mail="administrator@amptesting.com" --password="b8QW]X9h7#5n"
          ddev drush user-add-role "administrator" administrator_test_user
          ddev drush sql-query "TRUNCATE TABLE node__field_domain_source"
          ddev drush en amp_dev
          ddev drush pmu amp_dev
          ddev drush pmu symfony_mailer
          ddev drush en symfony_mailer
          ddev drush cr
          ddev export-db --gzip --file=site.sql.gz
        env:
          gh_token: ${{ secrets.GH_TOKEN_REPO }}

      - name: 'Upload Backup Artifact'
        uses: actions/upload-artifact@v4.3.1
        with:
          name: amp-daily-backup
          path: site.sql.gz
          retention-days: 5

      - name: Cleanup DDEV
        if: always()
        run: ddev delete -O -y
