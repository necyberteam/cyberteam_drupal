name: (A) Deploy to dev
on:
  push:
    branches:
      - 'main'
      - 'md-*'
jobs:
  deploy:
    name: Deploy site
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '#nobuild') }}
    steps:
      - uses: actions/checkout@v4.1.1

      - uses: ./.github/actions/dingorunner
        if: ${{ contains(github.event.head_commit.message, '#sync') }}
        env:
          runner: sync
          site_name: ${{ secrets.TERMINUS_SITE_NAME }}
          terminus_api: ${{ secrets.TERMINUS_API }}
          SSH_PRIVATE_KEY: ${{ secrets.PANTHEON_DEPLOY_KEY}}

      - uses: ./.github/actions/dingorunner
        env:
          runner: update
          PANTHEON_GIT_REPO: ${{ secrets.PANTHEON_GIT_REPO }}
          message: ${{ github.event.head_commit.message }}
          SSH_PRIVATE_KEY: ${{ secrets.PANTHEON_DEPLOY_KEY}}
          git_email: ${{ secrets.GIT_EMAIL }}
          git_name: ${{ secrets.GIT_USER }}
          gh_token: ${{ secrets.GH_TOKEN_REPO }}

      - name: Trigger Behat workflow
        if: "contains(github.event.head_commit.message, '#behat')"
        run: |
          gh workflow run behat.yml -r "$drupal_update"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_REPO }}
          drupal_update: ${{ github.event.inputs.drupal_update }}

  md:
    name: Spin up Multidev environment
    runs-on: ubuntu-latest
    if: ${{ contains(github.ref, 'md-') }}
    needs: deploy
    steps:
      - uses: actions/checkout@v4.1.1

      - name: Composer install
        run: |
          composer install --no-dev --ignore-platform-reqs

      - name: Check if multidev environment exists
        uses: ./.github/actions/dingorunner
        env:
          runner: md_check
          terminus_api: ${{ secrets.TERMINUS_API }}
          SSH_PRIVATE_KEY: ${{ secrets.PANTHEON_DEPLOY_KEY}}

      - name: Store md file status
        run: |
          branch="${GITHUB_REF#refs/heads/}"
          filename="blt/md/$branch"
          file_exists=false
          if [ -f "$filename" ]; then
            file_exists=true
          fi
          echo $file_exists
          echo "MD_FILE=$(echo $file_exists)" >> $GITHUB_ENV

      - name: Store md status into env variable
        run: |
          MD_STATUS=$(cat md_check.txt)
          echo $MD_STATUS
          echo "md=$(echo $MD_STATUS)" >> $GITHUB_ENV

      - name: Create multidev environment
        uses: ./.github/actions/dingorunner
        if: ${{ env.md == 'false' }}
        env:
          runner: md_create
          terminus_api: ${{ secrets.TERMINUS_API }}
          SSH_PRIVATE_KEY: ${{ secrets.PANTHEON_DEPLOY_KEY}}

      - name: Store run file commands
        uses: ./.github/actions/dingorunner
        if: ${{ env.MD_FILE == 'true' }}
        env:
          runner: md_file_commands
          terminus_api: ${{ secrets.TERMINUS_API }}
          SSH_PRIVATE_KEY: ${{ secrets.PANTHEON_DEPLOY_KEY}}
